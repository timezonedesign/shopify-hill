// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/arrayUtils ../../../core/Error ../../../core/Logger ../../../core/maybe ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/quantizationUtils ../../../geometry/support/spatialReferenceUtils ../../../layers/support/arcgisLayerUrl ../../../layers/support/fieldType ../../../layers/support/fieldUtils ../../../rest/support/GenerateRendererParameters ../../../rest/support/QuantizationParameters ../../../rest/support/StatisticDefinition ../../../rest/support/UniqueValueDefinition ../../statistics/support/predominanceUtils ../../statistics/support/statsWorker ../../statistics/support/utils ../../statistics/support/WorkerClient ../utils ./LayerAdapter ./support/utils ../../../statistics/utils ../../../tasks/GenerateRendererTask ../../../geometry/Point".split(" "),
function(v,K,E,L,y,R,G,B,S,T,ea,fa,U,M,N,V,W,C,H,X,I,Y,O,D,u,Z,P,aa,q,x,ba,ca){const da=R.getLogger("esri.smartMapping.support.adapters.FeatureLayerAdapter");E=function(Q){function J(b){return Q.call(this,b)||this}v._inheritsLoose(J,Q);var m=J.prototype;m.destroy=function(){var b;this._hasLocalSource=null;null==(b=this.workerClient)?void 0:b.destroy()};m._isStatsSupportedOnService=function(){const b=this.layer;return!b.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&
!V.isHostedAgolService(b.url)&&10.5>b.version?Promise.reject(new y("feature-layer-adapter:not-supported","Layer does not support statistics query")):Promise.resolve()};m._waitForLayerViewUpdate=function(){var b=v._asyncToGenerator(function*(a){if(!a)throw new y("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const c=new AbortController;a=S.whenFalseOnce(a,"updating",c.signal);yield B.timeout(a,5E3,c).catch(d=>{da.warn("LayerView is taking too long to update. Aborting fetch from layerView.");
throw d;})});return function(a){return b.apply(this,arguments)}}();m._fetchFeaturesFromMemory=function(){var b=v._asyncToGenerator(function*(a,c,d,e){const f=this.layer;e="json"===e;if(this._hasLocalSource)return a=yield f.queryFeatures(c),e?q.ensureFeaturesJSON(a.features):a.features;yield this._waitForLayerViewUpdate(a);if(e&&"queryFeaturesJSON"in a&&a.queryFeaturesJSON)return{features:e}=yield a.queryFeaturesJSON(c,{signal:d}),e;a=yield a.queryFeatures(c,{signal:d});return e?q.ensureFeaturesJSON(a.features):
a.features});return function(a,c,d,e){return b.apply(this,arguments)}}();m._fetchFeaturesFromService=function(b,a){return this.layer.queryFeatures(b,{signal:a}).then(c=>c.features)};m._fetchFeaturesJSONFromService=function(b,a){return this._fetchFeaturesFromService(b,a).then(q.ensureFeaturesJSON)};m._fetchFeaturesForStats=function(b,a){return P.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression}).then(c=>this.getSampleFeatures({sampleSize:-1,view:b.view,
returnGeometry:b.returnGeometry,requiredFields:c,signal:b.signal},a))};m._summaryStatsFromGenRend=function(b){const a=b.normalizationType,c=b.normalizationField;return this.classBreaks({field:b.field,numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:a,normalizationField:"field"===a?c:void 0,minValue:b.minValue,maxValue:b.maxValue,signal:b.signal}).then(d=>{let e,f;d.classBreakInfos.some(g=>{g.hasAvg&&(e=g);return!!e});if(e){var h=e.maxValue-e.minValue;
f=e.minValue+h/2;h*=4}return x.processSummaryStatisticsResult({min:d.minValue,max:d.maxValue,avg:f,stddev:h})})};m._getSummaryStatsQuery=function(b,a){const {field:c,normalizationType:d,normalizationField:e,normalizationTotal:f,minValue:h,maxValue:g}=b;a=this.supportsSQLExpression&&a?q.msSinceUnixEpochSQL(this,c):b.sqlExpression;var k=q.getFieldExpr({field:c,normalizationType:d,normalizationField:e,normalizationTotal:f,layer:this});const l=a||k;k=l?u.getRangeExpr(l,h,g):null;var n=u.getSQLFilterForNormalization({field:c,
normalizationField:e,normalizationType:d});b=u.mergeWhereClauses(b.sqlWhere,n);b=u.mergeWhereClauses(b,k);const t=x.isNullCountSupported({normalizationField:e,normalizationType:d,sqlExpression:a,supportsSQLExpression:this.supportsSQLExpression,minValue:h,maxValue:g}),p=C.isStringField(this.getField(c));k=x.statisticTypes.filter(r=>"nullcount"===r?t:p?"count"===r:!0);n=this.layer.createQuery();n.where=u.mergeWhereClauses(n.where,b);n.sqlFormat=a?"standard":null;n.outStatistics=k.map(r=>{const A=new I;
let z=null,w=null,F=`${r}_value`;"variance"===r?(z="var",w=l):"nullcount"===r?(z="count",w=this.layer.objectIdField,F="totalcount_value"):"median"===r?(z="percentile-continuous",w=l,A.statisticParameters={value:.5}):(z=r,w=l);A.statisticType=z;A.onStatisticField=w;A.outStatisticFieldName=F;return A});return n};m._summaryStatsFromServiceQuery=function(){var b=v._asyncToGenerator(function*(a,c){yield this._isStatsSupportedOnService();"percent-of-total"===a.normalizationType&&(a.normalizationTotal=yield this._getNormalizationTotal(a.field,
a.normalizationType));const d=this._getSummaryStatsQuery(a,c);a=yield this.layer.queryFeatures(d,{signal:a.signal});c=q.getSummaryStatisticsFromFeatureSet(a,c);return x.processSummaryStatisticsResult(c)});return function(a,c){return b.apply(this,arguments)}}();m._summaryStatsFromClientQuery=function(){var b=v._asyncToGenerator(function*(a,c){const d=this._getSummaryStatsQuery(a,c);a=yield this.layer.queryFeatures(d,{signal:a.signal});c=q.getSummaryStatisticsFromFeatureSet(a,c);return x.processSummaryStatisticsResult(c)});
return function(a,c){return b.apply(this,arguments)}}();m._getNormalizationTotalFromMemory=function(){var b=v._asyncToGenerator(function*(a,c,d){const {featuresJSON:e,graphics:f,layerView:h,query:g}=c;a=(!e&&!f&&h&&"querySummaryStatistics"in h?yield h.querySummaryStatistics(g,{field:a},{signal:d}):e?yield this.workerClient.summaryStatistics({field:a},e):yield D.summaryStatistics({attribute:{field:a},features:f})).sum;if(null==a)throw new y("feature-layer-adapter:invalid","invalid normalizationTotal");
return a});return function(a,c,d){return b.apply(this,arguments)}}();m._summaryStatsFromMemory=function(){var b=v._asyncToGenerator(function*(a,c){const {view:d,field:e,valueExpression:f,normalizationType:h,features:g,signal:k}=a,l={field:e,valueExpression:f,normalizationType:h,normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue};f&&d&&g&&(l.fieldType=null!=c&&c.type?W.kebabDict.toJSON(c.type):null,l.viewInfoParams=q.getViewInfoParams(d));
const {featuresJSON:n,graphics:t,layerView:p,query:r}=yield this._processStatsFromMemoryParams(a);"percent-of-total"===h&&null==a.normalizationTotal&&(l.normalizationTotal=yield this._getNormalizationTotalFromMemory(e,{featuresJSON:n,graphics:t,layerView:p,query:r},k));return!n&&!t&&p&&"querySummaryStatistics"in p?p.querySummaryStatistics(r,l,{signal:k}):n?this.workerClient.summaryStatistics(l,n):D.summaryStatistics({attribute:l,features:t})});return function(a,c){return b.apply(this,arguments)}}();
m._processStatsFromMemoryParams=function(){var b=v._asyncToGenerator(function*(a){var c=a.features;if(null!=c&&c.length)return c.length&&"declaredClass"in c[0]&&"esri.Graphic"===c[0].declaredClass?{graphics:c}:{featuresJSON:c};const {view:d,field:e,normalizationField:f,valueExpression:h,signal:g}=a;let k=c=a=null,l=null;if(d)try{a=yield d.whenLayerView(this.layer),c="querySummaryStatistics"in a&&"function"===typeof a.querySummaryStatistics}catch{c=!1}if(c)try{yield this._waitForLayerViewUpdate(a);
const t=yield P.getFieldsList({field:e,normalizationField:f,valueExpression:h});(yield q.getMissingFields(this,t,a)).length?c=!1:(k=this.layer.createQuery(),k.outFields=t,k.returnGeometry=!1);a.suspended&&(c=!1)}catch{c=!1}if(!c){var n;l=yield this._fetchFeaturesForStats({field:e,valueExpression:h,normalizationField:f,view:d,signal:g},"json");if(null==(n=l)||!n.length)throw new y("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");}return{layerView:a,query:k,
featuresJSON:l}});return function(a){return b.apply(this,arguments)}}();m._uvFromGenRenderer=function(b,a){const c=b.field,d=new Y;d.attributeField=c;const e=new H;e.classificationDefinition=d;return this.generateRenderer(e,b.signal).then(f=>{const h={},g=this.getField(c);f.uniqueValues.forEach(k=>{let l=k.value;if(null==l||""===l||"string"===typeof l&&(""===l.trim()||"\x3cnull\x3e"===l.toLowerCase()))l=null;null==h[l]?h[l]={count:k.count,data:C.isNumericField(g)&&l?Number(l):l}:h[l].count+=k.count});
return{count:h}}).then(f=>x.createUVResult(f,a,b.returnAllCodedValues))};m._getUVQuery=function(b){const a=b.field,c=b.sqlExpression;var d="countOF"+(a||"Expr");const e=new I;e.statisticType="count";e.onStatisticField=c?"1":a;e.outStatisticFieldName=d;d=this.layer.createQuery();d.where=u.mergeWhereClauses(d.where,b.sqlWhere);d.sqlFormat=c?"standard":null;d.outStatistics=[e];d.groupByFieldsForStatistics=[a||c];return d};m._uvFromServiceQuery=function(b,a){return this._isStatsSupportedOnService().then(()=>
this.layer.queryFeatures(this._getUVQuery(b),{signal:b.signal})).then(c=>q.getUniqueValuesFromFeatureSet(c,this,b.field,b.view,null,b.signal)).then(c=>x.createUVResult(c,a,b.returnAllCodedValues))};m._uvFromClientQuery=function(){var b=v._asyncToGenerator(function*(a,c){var {signal:d}=a,e=this._getUVQuery(a);e=yield this.layer.queryFeatures(e,{signal:d});d=yield q.getUniqueValuesFromFeatureSet(e,this,a.field,a.view,null,d);return x.createUVResult(d,c,a.returnAllCodedValues)});return function(a,c){return b.apply(this,
arguments)}}();m._uvFromMemory=function(){var b=v._asyncToGenerator(function*(a,c){const {view:d,field:e,valueExpression:f,returnAllCodedValues:h,signal:g}=a,{featuresJSON:k,graphics:l,layerView:n,query:t}=yield this._processStatsFromMemoryParams(a);a={field:e,valueExpression:f,domain:c,returnAllCodedValues:h};f&&d&&k&&(a.viewInfoParams=q.getViewInfoParams(d));return!k&&!l&&n&&"queryUniqueValues"in n?n.queryUniqueValues(t,a,{signal:g}):k?this.workerClient.uniqueValues(a,k):D.uniqueValues({attribute:a,
features:l})});return function(a,c){return b.apply(this,arguments)}}();m._calcBinsSQL=function(b,a,c){const d=[],e=a.length;a.forEach((f,h)=>{const [g,k]=f;f=null;f=0!==h||c?h!==e-1||c?u.mergeWhereClauses(`${b} >= ${g}`,`${b} ${h===e-1?" \x3c\x3d ":" \x3c "} ${k}`):`${b} >= ${g}`:`${b} < ${k}`;d.push("WHEN ("+f+") THEN "+(h+1))});return["CASE",d.join(" "),"ELSE 0 END"].join(" ")};m._getNormalizationTotal=function(b,a,c){return b&&"percent-of-total"===a?this.summaryStatistics({field:b,signal:c}).then(d=>
d.sum):Promise.resolve(null)};m._getQueryParamsForExpr=function(b,a){const c=b.signal;if(!b.valueExpression&&!b.sqlExpression){const {field:e,normalizationType:f,normalizationField:h}=b;var d=e?this.getField(e):null;d=C.isDateField(d);a={field:e,normalizationType:f,normalizationField:h,normalizationTotal:a,layer:this};return{sqlExpression:d?q.msSinceUnixEpochSQL(this,e):q.getFieldExpr(a),sqlWhere:d?null:b.sqlWhere||u.getSQLFilterForNormalization({field:e,normalizationType:f,normalizationField:h}),
signal:c}}return{valueExpression:b.valueExpression,sqlExpression:b.sqlExpression,sqlWhere:b.sqlWhere,signal:c}};m._getDataRange=function(b,a,c){return null!=a&&null!=c?Promise.resolve({min:a,max:c}):this.summaryStatistics(b).then(d=>({min:d.min,max:d.max}))};m._histogramForExpr=function(b){return this._getNormalizationTotal(b.field,b.normalizationType,b.signal).then(a=>{const c=this._getQueryParamsForExpr(b,a);return this._getDataRange(c,b.minValue,b.maxValue).then(d=>{const {min:e,max:f}=d,h=b.numBins||
10;d=x.getEqualIntervalBins(e,f,h);d=this._calcBinsSQL(c.sqlExpression,d,null!=b.minValue&&null!=b.maxValue);const g=new I({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),k=this.layer.createQuery();k.where=u.mergeWhereClauses(k.where,c.sqlWhere);k.sqlFormat="standard";k.outStatistics=[g];k.groupByFieldsForStatistics=[d];k.orderByFields=[d];return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(k,{signal:c.signal})).then(l=>q.getHistogramFromFeatureSet(l,
e,f,h,a))})})};m._histogramForField=function(b){let a=null;a=null!=b.minValue&&null!=b.maxValue?Promise.resolve({min:b.minValue,max:b.maxValue}):this.summaryStatistics(b).then(c=>{if(!c.count)throw new y("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:c.min,max:c.max}});return a.then(c=>this._getBins({min:c.min,max:c.max},b.field,b.numBins,b.view,b.signal))};m._getBins=function(b,a,c=10,d,e){const {min:f,max:h,
normTotal:g,excludeZerosExpr:k}=b,l=b.intervals||x.getEqualIntervalBins(f,h,c);return this._queryBins(l,b.sqlExpr||a,k,d,e).then(n=>({bins:n.map((t,p)=>({minValue:l[p][0],maxValue:l[p][1],count:t.value})),minValue:f,maxValue:h,normalizationTotal:g}))};m._queryBins=function(b,a,c,d,e){const f=[],h=b.length;for(let g=0;g<h;g++){const k=u.mergeWhereClauses(c,u.mergeWhereClauses(a+" \x3e\x3d "+b[g][0],null!==b[g][1]?a+(g===h-1?" \x3c\x3d ":" \x3c ")+b[g][1]:""));f.push(k)}return B.eachAlways(f.map(g=>
this.queryFeatureCount({whereClause:g,view:d,signal:e})))};m._binParamsFromGenRend=function(b,a){const {field:c,normalizationType:d,normalizationField:e,signal:f}=b,h=u.getSQLFilterForNormalization({field:c,normalizationType:d,normalizationField:e});b=new H({classificationDefinition:x.createClassBreaksDefinition({field:c,normalizationType:d,normalizationField:e,classificationMethod:b.classificationMethod,standardDeviationInterval:b.standardDeviationInterval,breakCount:b.numBins||10}),where:u.mergeWhereClauses(h,
a)});return this.generateRenderer(b,f).then(g=>{const {normalizationTotal:k,classBreaks:l}=g;return q.generateBinParams({field:c,normalizationType:d,normalizationField:e,normalizationTotal:k,classBreaks:l,where:h,layer:this})})};m._histogramFromMemory=function(){var b=v._asyncToGenerator(function*(a){const {view:c,field:d,signal:e}=a,{featuresJSON:f,graphics:h,layerView:g,query:k}=yield this._processStatsFromMemoryParams(a),l={field:d,valueExpression:a.valueExpression,normalizationType:a.normalizationType,
normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue,standardDeviationInterval:a.standardDeviationInterval,classificationMethod:a.classificationMethod,numBins:a.numBins};a.valueExpression&&c&&f&&(l.viewInfoParams=q.getViewInfoParams(c));"percent-of-total"===a.normalizationType&&null==a.normalizationTotal&&(l.normalizationTotal=yield this._getNormalizationTotalFromMemory(d,{featuresJSON:f,graphics:h,layerView:g,query:k},e));return!f&&
!h&&g&&"queryHistogram"in g?g.queryHistogram(k,l,{signal:e}):f?this.workerClient.histogram(l,f):D.histogram({attribute:l,features:h})});return function(a){return b.apply(this,arguments)}}();m._classBreaksFromGenRend=function(b){const {field:a,normalizationType:c,normalizationField:d,normalizationTotal:e,signal:f}=b,h=u.getSQLFilterForNormalization({field:a,normalizationType:c,normalizationField:d});var g=q.getFieldExpr({field:a,normalizationType:c,normalizationField:d,normalizationTotal:e,layer:this});
g=u.getRangeExpr(g,b.minValue,b.maxValue);const k=x.createClassBreaksDefinition({field:a,normalizationType:c,normalizationField:d,classificationMethod:b.classificationMethod,standardDeviationInterval:b.standardDeviationInterval,breakCount:b.numClasses||5}),l=new H;l.classificationDefinition=k;l.where=u.mergeWhereClauses(h,g);return this.generateRenderer(l,f).then(n=>x.resolveCBResult(n,b.classificationMethod))};m._classBreaksFromInterpolation=function(b){const {minValue:a,maxValue:c}=b,d=b.numClasses||
5,e=[],f=(c-a)/d;for(let h=0;h<d;h++){const g=a+h*f;e.push({minValue:g,maxValue:g+f})}e[d-1].maxValue=c;b=x.resolveCBResult({classBreaks:e,normalizationTotal:b.normalizationTotal},b.classificationMethod);return Promise.resolve(b)};m._classBreaksFromMemory=function(){var b=v._asyncToGenerator(function*(a){const {view:c,field:d,signal:e}=a,{featuresJSON:f,graphics:h,layerView:g,query:k}=yield this._processStatsFromMemoryParams(a),l={field:d,valueExpression:a.valueExpression,normalizationType:a.normalizationType,
normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue,standardDeviationInterval:a.standardDeviationInterval,classificationMethod:a.classificationMethod,numClasses:a.numClasses};a.valueExpression&&c&&f&&(l.viewInfoParams=q.getViewInfoParams(c));"percent-of-total"===a.normalizationType&&null==a.normalizationTotal&&(l.normalizationTotal=yield this._getNormalizationTotalFromMemory(d,{featuresJSON:f,graphics:h,layerView:g,query:k},e));return!f&&
!h&&g&&"queryClassBreaks"in g?g.queryClassBreaks(k,l,{signal:e}):f?this.workerClient.classBreaks(l,f):D.classBreaks({attribute:l,features:h})});return function(a){return b.apply(this,arguments)}}();m._heatmapStatsFromMemory=function(){var b=v._asyncToGenerator(function*(a,c){const {blurRadius:d,field:e,view:f,signal:h}=a,{resolution:g,size:k}=f.state,l=new X({extent:f.extent,tolerance:g});a=this._quantizeFeatures(a.features||(yield this._fetchFeaturesForStats({field:e,view:f,returnGeometry:!0,signal:h})),
l,f);if(!a||!a.length)return{count:0,min:null,max:null,avg:null,stddev:null};if(c=q.calculateHeatmapStats(a,d,c,e,k[0],k[1]))return{count:c.count,min:c.min,max:c.max,avg:c.mean,stddev:c.stdDev};throw new y("feature-layer-adapter:invalid","unable to calculate heatmap statistics");});return function(a,c){return b.apply(this,arguments)}}();m._quantizeFeatures=function(b,a,c){const d=M.toQuantizationTransform(a),{spatialReference:e,size:f}=c,h=N.isWrappable(e)?N.getInfo(e):null,g=h?Math.round((h.valid[1]-
h.valid[0])/d.scale[0]):null;return b.map(k=>{const l=new ca(G.unwrap(k.geometry));M.quantizePoint(d,l,l,l.hasZ,l.hasM);k.geometry=h?this._wrapPoint(l,g,f[0]):l;return k})};m._wrapPoint=function(b,a,c){0>b.x?b.x+=a:b.x>c&&(b.x-=a);return b};m.getField=function(b=""){return this.layer.getField(b)};m.getFieldUsageInfo=function(b){return this.getField(b)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null};m.getFieldDomain=function(b,
a){return this.layer.getFieldDomain(b,a)};m.summaryStatistics=function(b){const {field:a,normalizationType:c,sqlExpression:d,view:e,features:f}=b,h=a?this.getField(a):null,g=C.isDateField(h),k=b.valueExpression||d,l=k&&!d,n=e&&"3d"===e.type;return this._hasLocalSource||f||l?l||f||n?this._summaryStatsFromMemory(b,h):this._summaryStatsFromClientQuery(b,g):this.supportsSQLExpression||!g&&!k&&"natural-log"!==c&&"square-root"!==c?(c&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(b):this._summaryStatsFromServiceQuery(b,
g)).catch(()=>{B.throwIfAborted(b.signal);return this._summaryStatsFromMemory(b,h)}):Promise.reject(new y("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries"))};m.uniqueValues=function(b){const {field:a,valueExpression:c,sqlExpression:d,signal:e}=b,f=(a?this.getField(a):null)&&this.getFieldDomain(a),h=c&&(!d||!this.supportsSQLExpression),g=b.view,k=g&&"3d"===g.type;return this._hasLocalSource||b.features||h?h||b.features||k?this._uvFromMemory(b,f):
this._uvFromClientQuery(b,f):this._uvFromServiceQuery(b,f).catch(l=>{B.throwIfAborted(e);return b.field?this._uvFromGenRenderer(b,f):l}).catch(()=>{B.throwIfAborted(e);return h||b.features||k?this._uvFromMemory(b,f):this._uvFromClientQuery(b,f)})};m.histogram=function(b){const {field:a,normalizationType:c,normalizationField:d,classificationMethod:e,view:f,signal:h}=b;var g=a?this.getField(a):null;g=C.isDateField(g);const k=b.valueExpression||b.sqlExpression,l=k&&!b.sqlExpression,n=this.supportsSQLExpression,
t=!e||"equal-interval"===e,p=b.minValue,r=b.maxValue,A=null!=p&&null!=r,z=b.numBins||10;return this._hasLocalSource||b.features||l?this._histogramFromMemory(b):(k||n)&&t?n||!k&&"natural-log"!==c&&"square-root"!==c?this._histogramForExpr(b):Promise.reject(new y("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):g&&t?Promise.reject(new y("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):
c||!t?this._binParamsFromGenRend(b).then(w=>{if(!A)return this._getBins(w,a,z,f,h);if(p>w.max||r<w.min)throw new y("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(t)return this._getBins({min:p,max:r,sqlExpr:w.sqlExpr,excludeZerosExpr:w.excludeZerosExpr},a,z,f,h);w=q.getFieldExpr({field:a,normalizationType:c,normalizationField:d,normalizationTotal:w.normTotal,layer:this});w=u.getRangeExpr(w,p,r);return this._binParamsFromGenRend(b,
w).then(F=>this._getBins(F,a,z,f,h))}):this._histogramForField(b)};m.classBreaks=function(b){const a=!1!==b.analyzeData,c=this._hasLocalSource||b.features||b.valueExpression;return a&&c?this._classBreaksFromMemory(b):(a?this._classBreaksFromGenRend(b):this._classBreaksFromInterpolation(b)).catch(()=>{B.throwIfAborted(b.signal);return this._classBreaksFromMemory(b)})};m.queryFeatureCount=function(b){if(this._hasLocalSource)return Promise.reject(new y("feature-layer-adapter:not-supported","Layer does not support count query"));
const a=this.layer,c=a.createQuery();c.where=u.mergeWhereClauses(c.where,b.whereClause);return a.queryFeatureCount(c,{signal:b.signal})};m.generateRenderer=function(b,a){var c=this.layer;if(this._hasLocalSource||10.1>c.version)return Promise.reject(new y("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const d=new ba({url:c.parsedUrl.path,source:c.dynamicDataSource,gdbVersion:c.gdbVersion});c=c.createQuery();b.where=
u.mergeWhereClauses(b.where,c.where);return d.execute(b,{signal:a})};m.heatmapStatistics=function(b){const {field:a,fieldOffset:c,signal:d}=b;return(a&&null==c?this.summaryStatistics({field:a,signal:d}):Promise.resolve(null)).then(e=>{let f=c||0;if(e){const {count:h,min:g,max:k}=e;h?g===k&&0===g?f=1:0>=k?f="abs":0>g&&(f=-1.01*g):f=1}return this._heatmapStatsFromMemory(b,f).then(h=>({...h,summaryStatistics:e,fieldOffset:f}))})};m.predominantCategories=function(){var b=v._asyncToGenerator(function*(a){if(!this._hasLocalSource&&
!this.supportsSQLExpression)throw new y("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const {fields:c,view:d,signal:e}=a;a=O.getArcadeForPredominantCategory(c);const f=O.getSQLForPredominantCategoryName(c);a=d&&this._hasLocalSource?yield this._uvFromMemory({valueExpression:a,view:d,signal:e}):yield this._uvFromServiceQuery({sqlExpression:f.expression,valueExpression:a,signal:e});return q.getPredominantCategoriesFromUVInfos(a.uniqueValueInfos,
c)});return function(a){return b.apply(this,arguments)}}();m.getSampleFeatures=function(){var b=v._asyncToGenerator(function*(a,c){const {view:d,sampleSize:e,requiredFields:f,returnGeometry:h,signal:g}=a,k=this.layer.createQuery(),l="json"===c;k.outSpatialReference=a.spatialReference||d&&d.spatialReference;k.returnGeometry=!!h;k.outFields=f;let n=[],t=!1;if(d)try{const p=yield d.whenLayerView(this.layer);if(t=!(yield q.getMissingFields(this,f,p)).length)if(n=yield this._fetchFeaturesFromMemory(p,
k,g,c),n.length&&0<e&&e<=n.length)return L.pickRandom(n,e,1)}catch(p){B.throwIfAborted(g)}try{if(this._hasLocalSource)return t?n:l?this._fetchFeaturesJSONFromService(k,g):this._fetchFeaturesFromService(k,g);const p=yield this.queryFeatureCount({view:d,signal:g}),r=this.layer.capabilities.query.maxRecordCount;c=-1===e?p:e;c=r&&c>r?r:c;if(p<=n.length||n.length>=r)return n;const A=d.extent.width/d.width/d.scale*4E5;k.maxAllowableOffset=a.resolution||A;if(p<=c)return l?this._fetchFeaturesJSONFromService(k,
g):this._fetchFeaturesFromService(k,g);if(2E4>=p){const z=yield this.layer.queryObjectIds();k.objectIds=L.pickRandom(z,c,1);return l?this._fetchFeaturesJSONFromService(k,g):this._fetchFeaturesFromService(k,g)}this.layer.get("capabilities.query.supportsPagination")&&(k.num=Math.min(c,2E4));return l?this._fetchFeaturesJSONFromService(k,g):this._fetchFeaturesFromService(k,g)}catch(p){return B.throwIfAborted(g),n}});return function(a,c){return b.apply(this,arguments)}}();m.load=function(b){var a=this;
const c=this.layer.load(b).then(function(){var d=v._asyncToGenerator(function*(e){a.geometryType=e.geometryType;a.objectIdField=e.objectIdField;a.supportsSQLExpression=e.get("capabilities.query.supportsSqlExpression");a._hasLocalSource=!e.url&&!!e.source;a.hasQueryEngine=a._hasLocalSource;a.minScale=e.minScale;a.maxScale=e.maxScale;a.fullExtent=e.fullExtent;a.workerClient=Z.WorkerClient.getInstance();yield a.workerClient.open(G.unwrap(G.unwrap(b).signal))});return function(e){return d.apply(this,
arguments)}}());this.addResolvingPromise(c);return Promise.resolve(this)};return J}(aa);K.__decorate([T.property({constructOnly:!0})],E.prototype,"layer",void 0);return E=K.__decorate([U.subclass("esri.smartMapping.support.adapters.FeatureLayerAdapter")],E)});